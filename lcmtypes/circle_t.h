/** THIS IS AN AUTOMATICALLY GENERATED FILE.  DO NOT MODIFY
 * BY HAND!!
 *
 * Generated by lcm-gen
 **/

#include <stdint.h>
#include <stdlib.h>
#include <lcm/lcm_coretypes.h>
#include <lcm/lcm.h>

#ifndef _circle_t_h
#define _circle_t_h

#ifdef __cplusplus
extern "C" {
#endif

#include "point_t.h"
typedef struct _circle_t circle_t;
struct _circle_t
{
    point_t    center;
    int8_t     diameter;
    int8_t     confidence;
};

circle_t   *circle_t_copy(const circle_t *p);
void circle_t_destroy(circle_t *p);

typedef struct _circle_t_subscription_t circle_t_subscription_t;
typedef void(*circle_t_handler_t)(const lcm_recv_buf_t *rbuf,
             const char *channel, const circle_t *msg, void *user);

int circle_t_publish(lcm_t *lcm, const char *channel, const circle_t *p);
circle_t_subscription_t* circle_t_subscribe(lcm_t *lcm, const char *channel, circle_t_handler_t f, void *userdata);
int circle_t_unsubscribe(lcm_t *lcm, circle_t_subscription_t* hid);
int circle_t_subscription_set_queue_capacity(circle_t_subscription_t* subs,
                              int num_messages);


int  circle_t_encode(void *buf, int offset, int maxlen, const circle_t *p);
int  circle_t_decode(const void *buf, int offset, int maxlen, circle_t *p);
int  circle_t_decode_cleanup(circle_t *p);
int  circle_t_encoded_size(const circle_t *p);

// LCM support functions. Users should not call these
int64_t __circle_t_get_hash(void);
int64_t __circle_t_hash_recursive(const __lcm_hash_ptr *p);
int     __circle_t_encode_array(void *buf, int offset, int maxlen, const circle_t *p, int elements);
int     __circle_t_decode_array(const void *buf, int offset, int maxlen, circle_t *p, int elements);
int     __circle_t_decode_array_cleanup(circle_t *p, int elements);
int     __circle_t_encoded_array_size(const circle_t *p, int elements);
int     __circle_t_clone_array(const circle_t *p, circle_t *q, int elements);

#ifdef __cplusplus
}
#endif

#endif
